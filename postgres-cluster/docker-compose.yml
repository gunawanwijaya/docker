version: "3"
secrets:
  pgdb: { file: ./.secret/.pg-database }
  pgpw: { file: ./.secret/.pg-password }
  pgun: { file: ./.secret/.pg-username }
  pgpwrp: { file: ./.secret/.pgreplication-password }
  pgunrp: { file: ./.secret/.pgreplication-username }
  pgslrp: { file: ./.secret/.pgreplication-slot }
services:
  # --------------------------------------------------------------------------------------------------------------------
  postgres-primary:
    container_name: postgres-primary
    image: postgres:alpine
    labels:
      kompose.service.type: nodeport
      kompose.volume.type: configMap
    restart: "no"
    ports: [5432:5432]
    entrypoint: [/entrypoint]
    volumes:
      - ./docker-entry.primary.sh:/entrypoint:ro
      - ./docker-health.primary.sh:/healthcheck:ro
      - ./docker-init.primary.sh:/docker-entrypoint-initdb.d/init.sh:ro
      - ./etc.postgres.conf:/etc/config/postgres.conf:ro
      - ./../.volume/data:/data
      - ./../.volume/log:/var/log
    secrets:
      - { source: pgdb, target: /run/secrets/pgdb/pgdb }
      - { source: pgun, target: /run/secrets/pgun/pgun }
      - { source: pgpw, target: /run/secrets/pgpw/pgpw }
      - { source: pgunrp, target: /run/secrets/pgunrp/pgunrp }
      - { source: pgpwrp, target: /run/secrets/pgpwrp/pgpwrp }
      - { source: pgslrp, target: /run/secrets/pgslrp/pgslrp }
    environment:
      - TZ=Asia/Jakarta
      - LANG=en_US.utf8
      - PGDATA=/data/postgres-primary
      - POSTGRES_DB_FILE=/run/secrets/pgdb/pgdb
      - POSTGRES_USER_FILE=/run/secrets/pgun/pgun
      - POSTGRES_PASSWORD_FILE=/run/secrets/pgpw/pgpw
    healthcheck: 
      test: [CMD-SHELL, /healthcheck]
      interval: 3s
      timeout: 3s
      retries: 9
  # --------------------------------------------------------------------------------------------------------------------
  postgres-standby:
    container_name: postgres-standby
    image: postgres:alpine
    labels:
      kompose.service.type: nodeport
      kompose.volume.type: configMap
    restart: "no"
    ports: [5433:5432]
    entrypoint: [/entrypoint]
    volumes:
      - ./docker-entry.standby.sh:/entrypoint:ro
      - ./../.volume/data:/data
      - ./../.volume/log:/var/log
    secrets:
      - { source: pgunrp, target: /run/secrets/pgunrp/pgunrp }
      - { source: pgpwrp, target: /run/secrets/pgpwrp/pgpwrp }
      - { source: pgslrp, target: /run/secrets/pgslrp/pgslrp }
    environment:
      - TZ=Asia/Jakarta
      - LANG=en_US.utf8
      - PGDATA=/data/postgres-standby
    depends_on:
      postgres-primary: { condition: service_healthy }
  # --------------------------------------------------------------------------------------------------------------------
  postgres-mock:
    container_name: postgres-mock
    image: postgres:alpine
    labels:
      kompose.service.type: nodeport
      kompose.volume.type: configMap
    restart: "no"
    ports: [5431:5432]
    entrypoint: [/entrypoint]
    volumes:
      - ./docker-entry.mock.sh:/entrypoint:ro
      - ./etc.postgres.conf:/etc/config/postgres.conf:ro
      - ./../.volume/data:/data
      - ./../.volume/log:/var/log
    environment:
      - TZ=Asia/Jakarta
      - LANG=en_US.utf8
      - PGDATA=/data/postgres-mock
      - POSTGRES_DB=postgres-mock
      - POSTGRES_USER=postgres-mock
      - POSTGRES_PASSWORD=postgres-mock
    depends_on:
      postgres-primary: { condition: service_healthy }
